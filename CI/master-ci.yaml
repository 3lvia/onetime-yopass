trigger:
  - master

pool:
  vmImage: "ubuntu-latest"

variables:
  containerregistry: 'ContainerRegistryElvia'
  imagetag: $(Build.BuildNumber)
  name: yopass
  namespace: onetime

resources:
  repositories:
    - repository: templates
      type: github
      name: 3lvia/core-azure-devops-templates
      endpoint: 3lvia

stages:
  - stage: BuildDev
    dependsOn: []
    variables:
      imagetag: dev-$(Build.BuildNumber)
    jobs:
      - template: build.yaml@templates
        parameters:
          dockerfile: Dockerfile.dev
  - stage: BuildTest
    dependsOn: []
    variables:
      imagetag: test-$(Build.BuildNumber)
    jobs:
      - template: build.yaml@templates
        parameters:
          dockerfile: Dockerfile.test
  - stage: BuildProd
    dependsOn: []
    variables:
      imagetag: prod-$(Build.BuildNumber)
    jobs:
      - template: build.yaml@templates
        parameters:
          dockerfile: Dockerfile.prod

  # - stage: BuildDev
  #   jobs:
  #   - job: BuildDev
  #     steps:
  #     - publish: CI
  #       artifact: CI

  - stage: DeployDev
    dependsOn: [BuildDev]
    jobs:
      - deployment: dev
        environment: dev
        strategy:
          runOnce:
            deploy:
              steps:
              - bash: 'sed -e "s/:imagetag/:dev-$(Build.BuildNumber)/" -e "s/onetimeelviadomain/onetime.dev-elvia.io/" $(Pipeline.Workspace)/CI/manifest.yaml > manifestdev.yaml'
              - task: KubernetesManifest@0
                displayName: Deploy
                inputs:
                  kubernetesServiceConnection: RuntimeServiceKubernetesDev
                  namespace: onetime
                  manifests: manifestdev.yaml

  - stage: DeployTest
    dependsOn: [BuildTest, DeployDev]
    jobs:
      - deployment: test
        environment: test
        strategy:
          runOnce:
            deploy:
              steps:
              - bash: 'sed "s/:imagetag/:test-$(Build.BuildNumber)/;s/onetimeelviadomain/onetime.test-elvia.io/" $(Pipeline.Workspace)/CI/manifest.yaml > manifesttest.yaml'
              - task: KubernetesManifest@0
                displayName: Deploy
                inputs:
                  kubernetesServiceConnection: RuntimeServiceKubernetesTest
                  namespace: onetime
                  manifests: manifesttest.yaml
            
  - stage: DeployProd
    dependsOn: [BuildProd, DeployTest]
    jobs:
      - deployment: prod
        environment: prod
        strategy:
          runOnce:
            deploy:
              steps:
              - bash: 'sed "s/:imagetag/:prod-$(Build.BuildNumber)/;s/onetimeelviadomain/onetime.elvia.io/" $(Pipeline.Workspace)/CI/manifest.yaml > manifestprod.yaml'
              - task: KubernetesManifest@0
                displayName: Deploy
                inputs:
                  kubernetesServiceConnection: RuntimeServiceKubernetesProd
                  namespace: onetime
                  manifests: manifestprod.yaml
